name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tags like v1.0.0

permissions:
  contents: write  # gives access to create releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          disk-cache: ${{ github.workflow }}
          # Share repository cache between workflows.
          repository-cache: true
      
      - name: Build project
        id: build
        run: | 
            TARGET=@stardoc//src/main/java/com/google/devtools/build/stardoc/renderer:renderer_deploy.jar
            bazel build $TARGET
            echo "path=$(bazel 2>/dev/null cquery --output=files $TARGET)" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          body: |
            # Installation

            Add to `.bazelrc`:

                # Never Compile protoc Again
                # Don't build protoc from the cc_binary, it's slow and spammy when cache miss
                common --per_file_copt=external/.*protobuf.*@--PROTOBUF_WAS_NOT_SUPPOSED_TO_BE_BUILT
                common --host_per_file_copt=external/.*protobuf.*@--PROTOBUF_WAS_NOT_SUPPOSED_TO_BE_BUILT
                common --java_runtime_version=remotejdk_11

            Add to MODULE.bazel:

                http_jar = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_jar")
                http_jar(
                    name = "stardoc-prebuilt",
                    # integrity = "", # Fill in from the warning Bazel prints
                    urls = ["https://github.com/alexeagle/stardoc-prebuilt/releases/download/${{github.ref_name}}/renderer_deploy.jar"],
                )
            
            Add to tools/BUILD:

                java_binary(
                    name = "stardoc_renderer",
                    main_class = "com/google/devtools/build/stardoc/renderer/RendererMain",
                    runtime_deps = ["@stardoc-prebuilt//jar"],
                )
            
            Now update the `renderer` attribute of stardoc() targets to
            `//tools:stardoc_renderer`

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.build.outputs.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}